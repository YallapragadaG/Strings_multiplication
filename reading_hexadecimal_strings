import java.util.Arrays;  
import java.util.StringJoiner;
import java.util.Scanner;
import java.util.regex.*; 
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.*;  
import java.lang.Math; 
import java.lang.StringBuilder;

public class String_Multiplication{
    
    
    public static String hextoString(String hexnum){
        
       char[] heaxdecimal_num = hexnum.toCharArray();
       int length_hexnum = heaxdecimal_num.length;
       StringBuffer sb = new StringBuffer();
       char ch[] = hexnum.toCharArray();
       double res;
       ArrayList<Integer> list_int=new ArrayList<Integer>();
    //   ArrayList<Double> list=new ArrayList<Double>();  
       for(int i= 0 ; i < ch.length ; i++){ 
            
          
             String str = String.valueOf(ch[i]);//iterating through everysingle character in hexadecimal and converting into decimal format
             
             
             if (str.matches("[^0-9]")){
                 
               int num = Integer.parseInt(str, 16);
              
               list_int.add(num);
               
               
             }else {
                int num_2 = Integer.parseInt(str);
                list_int.add(num_2);
              
             
             }
       }
        // performing multiplication starting with 16^0 starting from right to left
        double result; 
        double mul =0;
        double z=0;
        for(int i= ch.length -1; i >= 0 ; i--){
        
        double x = list_int.get(i);
        result = x * Math.pow(16, mul);
        z = z+result; // appending the result after multiplying with 16 base.
        mul = mul+1;    
        }
        String s = new BigDecimal(z).toPlainString();// Big Decimal is 32 bit
        return s; // returning as string 
       
        
    }

    public static String multiply_strings(String a,String b){ 
      //we are going to multiply two large strings 
      // Now we are going to use classic multiplication, we did in elemetry school
      // Example 234
     //         *123
     //     702 - result of multiplying 234 with 3
     //   468 - result of multiplying 234 with 2
     // 234 - result of multiplying 234 with 1
     // 28782 - the end result after adding the above numbers.
     
     // for every number in second string we are iterating over and multiplying with the first one
      // we are converting string to characters in an array using toCharArray() java inbuilt method- it makes it easy to iterate over numbers in a string
      
      int prod_result;
      char[] string_1 = a.toCharArray();
      char[] string_2 = b.toCharArray();
      int len_string1 = string_1.length;
      int len_string2 = string_2.length;
      int len_array = len_string1+len_string2;
      char[] final_res;
      final_res = new char[len_array];
      Arrays.fill(final_res,'0');
      
      // Lets write for loops
      for( int y=len_string2-1; y >= 0 ; y--) // we are going right to left
      {
          for(int x=len_string1-1; x >= 0; x--)
          {
              //we iterated over the characters in an array, lets multiply with every character of b to a
              //in java the int data type is restruced to 32 bit, we dont have to specify or put any constraint to it.
               
                
                // System.out.println((string_1[x]) *2);
                
                // System.out.println((string_1[x]-'0') * 2);
                
               // System.out.println(string_2[y]);
                
                
                prod_result = ((string_1[x] -'0') * (string_2[y] -'0'));
                // we got the result as 20,15,10,5,16,12,8,4,12,9,6,3,8,6,4,2
                // now we are doing sum of multiplication result of x for each number in y
                int storage_add = (final_res[x+y+1]-'0') + prod_result;
                // System.out.println(storage_add);
                final_res[x+y+1] = (char)(storage_add%10 +'0');
                final_res[x+y] = (char)((final_res[x+y]-'0' + storage_add/10)+ '0');
            
                //System.out.println(Arrays.toString(final_res));// we have append the sum into thye arry in the each character of the array including the carry over the addition.
                }
      }
      
    // Now we got the product of two strings in an array, lets convert that to string, since our requirement is to return the result as string .
      String string_output = new String(final_res);
      String Pattern = "^0+(?!$)";//removing the leading zeros using regural expressions
      String str_return = string_output.replaceAll(Pattern, "");
      return str_return;
     
  }
  
    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        
        System.out.println("Enter Two Numbers " + "(Press Enter after each input):");
        System.out.println("Enter First Number: ");
        String num1 = sc.nextLine();
        System.out.println("Enter Second Number: ");
        String num2 = sc.nextLine();
        sc.close(); 
    
        if(num1.length() == 0  && num2.length() == 0){
        
            System.out.printf("Sorry! Input is null, please specify the numbers");
        
        }else {
    
          if (num1.matches("[A-F0-9]*") && num2.matches("[A-F0-9]*")) 
        {   
            String string_num1 = String_Multiplication.hextoString(num1);
            String string_num2 = String_Multiplication.hextoString(num2);
            String multiplication_output = String_Multiplication.multiply_strings(string_num1,string_num2);
        
            System.out.println("Output in Decimal: "+multiplication_output);
            
            BigInteger dec_string =new BigInteger(multiplication_output);
            // BigInteger to_hex = new BigInteger(dec_string,16);

            System.out.println("The output value in hexa deciaml: "+ dec_string.toString(16));
            
            
            
        }else{
               
              System.out.println("Please enter A-F and 0-9 digits");  
            }
       
       
         }
     }
}
